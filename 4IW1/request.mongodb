use("SampleCollections");

//Rechercher tous les films dont la description comprend “documentary” et de catégorie “horror”
db.Sakila_films.find({ Description: /documentary/i, Category: /horror/i });

//Donner le nombre de films en rating “G”
db.Sakila_films.countDocuments({ Rating: "G" });
db.Sakila_films.find({ Rating: "G" }).count();
db.Sakila_films.find({ Rating: "G" }).toArray().length;

//Rechercher tous les films de 2013 ou 2012 dont la durée est entre 60 et 150 minutes
db.video_movieDetails.find({
  $or: [{ year: 2013 }, { year: 2012 }],
  runtime: { $gte: 60, $lte: 150 },
});
db.video_movieDetails.find({
  year: { $in: [2013, 2012] },
  runtime: { $gte: 60, $lte: 150 },
});
db.video_movieDetails.find({
  year: { $gte: 2012, $lte: 2013 },
  runtime: { $gte: 60, $lte: 150 },
});
db.video_movieDetails.find({
  released: { $gte: new Date("2012-01-01"), $lt: new Date("2014-01-01") },
  runtime: { $gte: 60, $lte: 150 },
});

//Rechercher tous les films qui ont une image certified sur tomato
db.video_movieDetails.find({ "tomato.image": "certified" });

//Rechercher tous les films avec un acteur qui a pour nom CHASE et un acteur qui a pour prénom ED
db.Sakila_films.find({
  "Actors.Last name": "CHASE",
  "Actors.First name": "ED",
});

//Rechercher tous les films avec l’acteur ED CHASE
db.Sakila_films.find({
  Actors: {
    $elemMatch: {
      "First name": "ED",
      "Last name": "CHASE",
    },
  },
});

//Afficher tous les rating et le nombre de films pour chacun
db.Sakila_films.aggregate([{ $group: { _id: "$Rating", count: { $sum: 1 } } }]);
db.Sakila_films.aggregate([
  { $group: { _id: "$Rating", count: { $count: {} } } },
]);
